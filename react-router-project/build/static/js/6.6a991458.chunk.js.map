{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isentering","setisentering","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","console","log","quotedata"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCgE/BC,EA7DG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAoCE,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACE,qCACE,cAAC,IAAD,CACEC,KAAMF,EACNG,QAAS,SAACC,GAAD,MACP,gEAGJ,cAAC,EAAD,UACE,uBACEC,QAnBiB,WACvBJ,GAAc,IAmBRV,UAAWC,IAAQc,KACnBC,SA9BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAEzCtB,EAAMwB,WAAW,CAACC,OAAQL,EAAeM,KAAMH,KAqB3C,UAKGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAEtC,sBAAKL,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEpC,qBAAKP,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QAjCY,WAC5B1B,GAAc,IAgCkCV,UAAU,MAAlD,kC,gBC3BGqC,UAxBE,WACf,MAA8BC,YAAQC,KAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OACdC,EAAUC,cAEhBC,qBAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,aAEd,CAACJ,EAAQC,IAEZI,QAAQC,IAAI,WAAYN,GASxB,OACE,cAAC,EAAD,CAAWf,UAAsB,YAAXe,EAAsBlB,WARtB,SAACyB,GACvBF,QAAQC,IAAIC,GACZR,EAAYQ","file":"static/js/6.6a991458.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1hBhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2ydgi\",\"loading\":\"QuoteForm_loading__1M6AY\",\"control\":\"QuoteForm_control__3omA7\",\"actions\":\"QuoteForm_actions__1lovk\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import {useRef, useState} from \"react\";\nimport {Prompt} from \"react-router\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isentering, setisentering] = useState(false);\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    props.onAddQuote({author: enteredAuthor, text: enteredText});\n  }\n\n  const formfocushandler = () => {\n    setisentering(true);\n  };\n  \n  // console.log(isentering);\n  const finishenteringhandler = () => {\n    setisentering(false);\n  };\n\n  return (\n    <>\n      <Prompt\n        when={isentering}\n        message={(location) =>\n          \"Are you sure you want to leave? all your data will be lost\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formfocushandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishenteringhandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport {useHistory} from \"react-router\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport {addQuote} from \"../lib/api\";\r\nimport {useEffect} from \"react\";\r\n\r\nconst NewQuote = () => {\r\n  const {sendRequest, status} = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  console.log(\"status: \", status);\r\n\r\n  const addquotehandler = (quotedata) => {\r\n    console.log(quotedata);\r\n    sendRequest(quotedata);\r\n    // console.log(history);\r\n    // history.push(\"/quotes\");\r\n  };\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addquotehandler} />\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}