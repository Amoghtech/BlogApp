{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/Quotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","asc","history","useHistory","location","useLocation","isSortingAsc","URLSearchParams","search","get","sortedquotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","Quotes","useHttp","getallquotes","sendRequest","status","loadedquotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCiBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMC,GAAE,kBAAaN,EAAMO,IAAMN,UAAU,MAA3C,iC,iBC8CSO,EA1CG,SAACR,GACjB,IAXkBS,EAAQC,EAWpBC,EAAUC,cAEVC,EAAWC,cAKXC,EAA2C,QAF7B,IAAIC,gBAAgBH,EAASI,QAEhBC,IAAI,QAG/BC,GArBYV,EAqBcT,EAAMS,OArBZC,EAqBoBK,EApBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,IAAM,EAAI,MA0BxC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQqB,QAAxB,SACE,yBAAQC,QAXe,WAC3Bb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAWF,EAAe,OAAS,UAQvC,kBACQA,EAAe,aAAe,iBAGxC,oBAAId,UAAWC,IAAQyB,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVF,OAAQwB,EAAMxB,OACdD,KAAMyB,EAAMzB,MAHPyB,EAAMtB,a,yCCjCRuB,EAXO,WACpB,OACE,sBAAK7B,UAAWC,IAAQ6B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMzB,GAAG,aAAaL,UAAU,MAAhC,6BC6CS+B,UA/BA,WACb,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAOF,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKnC,UAAU,WAAf,SACE,cAACwC,EAAA,EAAD,MAKFF,EACK,mBAAGtC,UAAU,mBAAb,SAAiCsC,IAG3B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAItD,cAAC,EAAD,CAAWjC,OAAQ4B,IAHjB,cAAC,EAAD","file":"static/js/5.f1b963d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2pIcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1ZI4x\",\"sorting\":\"QuoteList_sorting__10dIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1eDbA\"};","import classes from \"./QuoteItem.module.css\";\nimport {Link} from \"react-router-dom\";\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import {Fragment} from \"react\";\nimport {useHistory, useRouteMatch, useLocation} from \"react-router\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortquotes = (quotes, asc) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (asc) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id > quoteB.id ? -1 : 1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n\n  const location = useLocation();\n\n  // console.log((location));\n  const queryparams = new URLSearchParams(location.search);\n\n  const isSortingAsc = queryparams.get(\"sort\") === \"asc\";\n  // console.log(isSortingAsc);\n\n  const sortedquotes = sortquotes(props.quotes, isSortingAsc);\n\n  const changesortinghandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAsc ? \"desc\" : \"asc\"}`,\n    });\n    // history.push(`${location.pathname}?sort=${isSortingAsc ? \"desc\" : \"asc\"}`);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changesortinghandler}>\n          Sort {isSortingAsc ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedquotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport {getallquotes} from \"../lib/api\";\r\nimport {useEffect} from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\n// const quotesr = [\r\n//   {\r\n//     id: \"q1\",\r\n//     author: \"Mark Zuckerberg\",\r\n//     text: \"Hello guyz\",\r\n//   },\r\n//   {\r\n//     id: \"q2\",\r\n//     author: \"James Bond\",\r\n//     text: \"i'm detective\",\r\n//   },\r\n// ];\r\n\r\nconst Quotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedquotes,\r\n    error,\r\n  } = useHttp(getallquotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!loadedquotes || loadedquotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return <QuoteList quotes={loadedquotes} />;\r\n};\r\n\r\nexport default Quotes;\r\n"],"sourceRoot":""}